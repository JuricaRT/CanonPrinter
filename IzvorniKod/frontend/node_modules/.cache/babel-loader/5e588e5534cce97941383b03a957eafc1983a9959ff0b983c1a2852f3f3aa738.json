{"ast":null,"code":"var _jsxFileName = \"/Users/lovro/Faks/ProgI/CanonPrinter/IzvorniKod/frontend/src/components/CSRFToken.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport baseURL from '../actions/debug';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CSRFToken = () => {\n  _s();\n  const [csrftoken, setcsrftoken] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await axios.get(`${baseURL}/csrf_cookie`, {\n          withCredentials: true\n        });\n      } catch (err) {}\n    };\n    fetchData();\n    setcsrftoken(Cookies.get('csrftoken'));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"hidden\",\n    name: \"csrfmiddlewaretoken\",\n    value: csrftoken\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(CSRFToken, \"eHZsZkoDg1vaj9We58mNjkmCmy8=\");\n_c = CSRFToken;\nexport default CSRFToken;\nvar _c;\n$RefreshReg$(_c, \"CSRFToken\");","map":{"version":3,"names":["React","useState","useEffect","axios","baseURL","Cookies","jsxDEV","_jsxDEV","CSRFToken","_s","csrftoken","setcsrftoken","fetchData","get","withCredentials","err","type","name","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lovro/Faks/ProgI/CanonPrinter/IzvorniKod/frontend/src/components/CSRFToken.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport baseURL from '../actions/debug';\nimport Cookies from 'js-cookie';\n\nconst CSRFToken = () => {\n    const [csrftoken, setcsrftoken] = useState('');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                await axios.get(`${baseURL}/csrf_cookie`, {withCredentials: true});\n            } catch (err) {\n\n            }\n        };\n        fetchData();\n        setcsrftoken(Cookies.get('csrftoken'));\n    }, []);\n\n    return (\n        <input type='hidden' name='csrfmiddlewaretoken' value={csrftoken} />\n    );\n};\n\nexport default CSRFToken;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAET,OAAQ,cAAa,EAAE;UAACU,eAAe,EAAE;QAAI,CAAC,CAAC;MACtE,CAAC,CAAC,OAAOC,GAAG,EAAE,CAEd;IACJ,CAAC;IACDH,SAAS,CAAC,CAAC;IACXD,YAAY,CAACN,OAAO,CAACQ,GAAG,CAAC,WAAW,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAOS,IAAI,EAAC,QAAQ;IAACC,IAAI,EAAC,qBAAqB;IAACC,KAAK,EAAER;EAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE5E,CAAC;AAACb,EAAA,CAlBID,SAAS;AAAAe,EAAA,GAATf,SAAS;AAoBf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}