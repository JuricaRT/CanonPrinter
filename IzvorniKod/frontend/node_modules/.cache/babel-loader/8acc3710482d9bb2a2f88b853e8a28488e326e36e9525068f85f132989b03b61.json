{"ast":null,"code":"var _jsxFileName = \"/Users/lovro/Faks/ProgI/CanonPrinter/IzvorniKod/frontend/src/components/List.js\";\nimport { connect } from \"react-redux\";\nimport { select_dictionary, start_learning, select_language } from \"../actions/learningSpecs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  elements,\n  type,\n  select_dictionary,\n  select_language,\n  start_learning,\n  dict,\n  lang\n}) => {\n  function handleClick(elem) {\n    if (type === \"dict\") {\n      select_dictionary(elem);\n    } else if (type === \"lang\") {\n      select_language(elem);\n    } else {\n      start_learning(elem, dict, lang);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: elements.map(elem => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(elem),\n      children: elem\n    }, elem, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = List;\nconst mapStateToProps = state => ({\n  dict: state.learningSpecsReducer.selectedDictionary,\n  lang: state.learningSpecsReducer.selectedLanguage\n});\nexport default connect(mapStateToProps, {\n  select_dictionary,\n  start_learning,\n  select_language\n})(List);\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["connect","select_dictionary","start_learning","select_language","jsxDEV","_jsxDEV","List","elements","type","dict","lang","handleClick","elem","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","learningSpecsReducer","selectedDictionary","selectedLanguage","$RefreshReg$"],"sources":["/Users/lovro/Faks/ProgI/CanonPrinter/IzvorniKod/frontend/src/components/List.js"],"sourcesContent":["import { connect } from \"react-redux\";\nimport {\n  select_dictionary,\n  start_learning,\n  select_language,\n} from \"../actions/learningSpecs\";\n\nconst List = ({\n  elements,\n  type,\n  select_dictionary,\n  select_language,\n  start_learning,\n  dict,\n  lang,\n}) => {\n  function handleClick(elem) {\n    if (type === \"dict\") {\n      select_dictionary(elem);\n    } else if (type === \"lang\") {\n      select_language(elem);\n    } else {\n      start_learning(elem, dict, lang);\n    }\n  }\n\n  return (\n    <div>\n      {elements.map((elem) => (\n        <button onClick={() => handleClick(elem)} key={elem}>\n          {elem}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  dict: state.learningSpecsReducer.selectedDictionary,\n  lang: state.learningSpecsReducer.selectedLanguage,\n});\n\nexport default connect(mapStateToProps, {\n  select_dictionary,\n  start_learning,\n  select_language,\n})(List);\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SACEC,iBAAiB,EACjBC,cAAc,EACdC,eAAe,QACV,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAC;EACZC,QAAQ;EACRC,IAAI;EACJP,iBAAiB;EACjBE,eAAe;EACfD,cAAc;EACdO,IAAI;EACJC;AACF,CAAC,KAAK;EACJ,SAASC,WAAWA,CAACC,IAAI,EAAE;IACzB,IAAIJ,IAAI,KAAK,MAAM,EAAE;MACnBP,iBAAiB,CAACW,IAAI,CAAC;IACzB,CAAC,MAAM,IAAIJ,IAAI,KAAK,MAAM,EAAE;MAC1BL,eAAe,CAACS,IAAI,CAAC;IACvB,CAAC,MAAM;MACLV,cAAc,CAACU,IAAI,EAAEH,IAAI,EAAEC,IAAI,CAAC;IAClC;EACF;EAEA,oBACEL,OAAA;IAAAQ,QAAA,EACGN,QAAQ,CAACO,GAAG,CAAEF,IAAI,iBACjBP,OAAA;MAAQU,OAAO,EAAEA,CAAA,KAAMJ,WAAW,CAACC,IAAI,CAAE;MAAAC,QAAA,EACtCD;IAAI,GADwCA,IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3C,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA5BId,IAAI;AA8BV,MAAMe,eAAe,GAAIC,KAAK,KAAM;EAClCb,IAAI,EAAEa,KAAK,CAACC,oBAAoB,CAACC,kBAAkB;EACnDd,IAAI,EAAEY,KAAK,CAACC,oBAAoB,CAACE;AACnC,CAAC,CAAC;AAEF,eAAezB,OAAO,CAACqB,eAAe,EAAE;EACtCpB,iBAAiB;EACjBC,cAAc;EACdC;AACF,CAAC,CAAC,CAACG,IAAI,CAAC;AAAC,IAAAc,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}