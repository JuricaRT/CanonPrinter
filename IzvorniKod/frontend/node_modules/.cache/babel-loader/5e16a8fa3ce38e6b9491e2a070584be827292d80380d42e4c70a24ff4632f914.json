{"ast":null,"code":"var _jsxFileName = \"/Users/lovro/Faks/ProgI/CanonPrinter/IzvorniKod/frontend/src/containers/ModifyDictionaries.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, GlobalStyle } from \"../elements/global\";\nimport { connect } from \"react-redux\";\nimport * as Element from \"../elements/mainscreen\";\nimport Banner from \"./Banner\";\nimport { useNavigate } from \"react-router-dom\";\nimport { get_dictionaries, select_dictionary, select_language } from \"../actions/learningSpecs\";\nimport { create_dictionary } from \"../actions/admin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModifyDictionaries = ({\n  isAuthenticated,\n  dictionaries,\n  uniqueLang,\n  selected_dictionary,\n  selected_mode,\n  selected_language,\n  get_dictionaries,\n  select_language,\n  select_dictionary,\n  create_dictionary\n}) => {\n  _s();\n  const [selectedLanguageButton, setSelectedLanguageButton] = useState(null);\n  const [dictionaryName, setDictionaryName] = useState(\"\");\n  const [addDictionaries, setAddDictionaries] = useState(false);\n  const [languages, setLanguages] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isAuthenticated || isAuthenticated === null) navigate(\"/\");\n  }, [isAuthenticated, navigate]);\n  function createDictionary() {\n    setAddDictionaries(!addDictionaries);\n    setSelectedLanguageButton(\"\");\n    setLanguages(uniqueLang);\n  }\n  function changeDictionaryName(change) {\n    setDictionaryName(change.target.value);\n  }\n  function submitDictionary() {\n    setAddDictionaries(false);\n    create_dictionary(dictionaryName, languages);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Banner, {\n        origin: \"ModifyDictionaries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Element.AddDictionary, {\n        onClick: createDictionary,\n        children: \"Add Dictionary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), addDictionaries && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Element.AddDictionaryName, {\n          type: \"text\",\n          placeholder: \"Dictionary name...\",\n          onChange: change => changeDictionaryName(change)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Element.LanguageSelectionForDictionary, {\n          children: languages.map(name => selectedLanguageButton === name ? /*#__PURE__*/_jsxDEV(Element.SelectedLanguageForDictionary, {\n            onClick: () => {\n              setSelectedLanguageButton(name);\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Element.NotSelectedLanguageForDictionary, {\n            onClick: () => {\n              setSelectedLanguageButton(name);\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Element.SubmitButtonForAddingDictionary, {\n          onClick: submitDictionary,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ModifyDictionaries, \"CIIbVJZleSCLumP4eV13PMsczvY=\", false, function () {\n  return [useNavigate];\n});\n_c = ModifyDictionaries;\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  is_superuser: state.profile.is_admin,\n  dictionaries: state.learningSpecsReducer.dictionaries,\n  uniqueLang: state.learningSpecsReducer.uniqueLang,\n  selected_dictionary: state.learningSpecsReducer.selectedDictionary,\n  selected_mode: state.learningSpecsReducer.selectedMode,\n  selected_language: state.learningSpecsReducer.language\n});\nexport default connect(mapStateToProps, {\n  get_dictionaries,\n  select_dictionary,\n  select_language,\n  create_dictionary\n})(ModifyDictionaries);\nvar _c;\n$RefreshReg$(_c, \"ModifyDictionaries\");","map":{"version":3,"names":["React","useState","useEffect","Container","GlobalStyle","connect","Element","Banner","useNavigate","get_dictionaries","select_dictionary","select_language","create_dictionary","jsxDEV","_jsxDEV","Fragment","_Fragment","ModifyDictionaries","isAuthenticated","dictionaries","uniqueLang","selected_dictionary","selected_mode","selected_language","_s","selectedLanguageButton","setSelectedLanguageButton","dictionaryName","setDictionaryName","addDictionaries","setAddDictionaries","languages","setLanguages","navigate","createDictionary","changeDictionaryName","change","target","value","submitDictionary","children","fileName","_jsxFileName","lineNumber","columnNumber","origin","AddDictionary","onClick","AddDictionaryName","type","placeholder","onChange","LanguageSelectionForDictionary","map","name","SelectedLanguageForDictionary","NotSelectedLanguageForDictionary","SubmitButtonForAddingDictionary","_c","mapStateToProps","state","auth","is_superuser","profile","is_admin","learningSpecsReducer","selectedDictionary","selectedMode","language","$RefreshReg$"],"sources":["/Users/lovro/Faks/ProgI/CanonPrinter/IzvorniKod/frontend/src/containers/ModifyDictionaries.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, GlobalStyle } from \"../elements/global\";\nimport { connect } from \"react-redux\";\nimport * as Element from \"../elements/mainscreen\";\nimport Banner from \"./Banner\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport {\n  get_dictionaries,\n  select_dictionary,\n  select_language,\n} from \"../actions/learningSpecs\";\nimport { create_dictionary } from \"../actions/admin\";\n\nconst ModifyDictionaries = ({\n  isAuthenticated,\n  dictionaries,\n  uniqueLang,\n  selected_dictionary,\n  selected_mode,\n  selected_language,\n  get_dictionaries,\n  select_language,\n  select_dictionary,\n  create_dictionary,\n}) => {\n  const [selectedLanguageButton, setSelectedLanguageButton] = useState(null);\n  const [dictionaryName, setDictionaryName] = useState(\"\");\n  const [addDictionaries, setAddDictionaries] = useState(false);\n  const [languages, setLanguages] = useState(null);\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isAuthenticated || isAuthenticated === null) navigate(\"/\");\n  }, [isAuthenticated, navigate]);\n\n  function createDictionary() {\n    setAddDictionaries(!addDictionaries);\n    setSelectedLanguageButton(\"\");\n    setLanguages(uniqueLang);\n  }\n\n  function changeDictionaryName(change) {\n    setDictionaryName(change.target.value);\n  }\n\n  function submitDictionary() {\n    setAddDictionaries(false);\n    create_dictionary(dictionaryName, languages);\n  }\n\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <Container>\n        <Banner origin=\"ModifyDictionaries\"></Banner>\n        <hr />\n        <Element.AddDictionary onClick={createDictionary}>\n          Add Dictionary\n        </Element.AddDictionary>\n        {addDictionaries && (\n          <>\n            <Element.AddDictionaryName\n              type=\"text\"\n              placeholder=\"Dictionary name...\"\n              onChange={(change) => changeDictionaryName(change)}\n            ></Element.AddDictionaryName>\n            <Element.LanguageSelectionForDictionary>\n              {languages.map((name) =>\n                selectedLanguageButton === name ? (\n                  <Element.SelectedLanguageForDictionary\n                    onClick={() => {\n                      setSelectedLanguageButton(name);\n                    }}\n                  >\n                    {name}\n                  </Element.SelectedLanguageForDictionary>\n                ) : (\n                  <Element.NotSelectedLanguageForDictionary\n                    onClick={() => {\n                      setSelectedLanguageButton(name);\n                    }}\n                  >\n                    {name}\n                  </Element.NotSelectedLanguageForDictionary>\n                )\n              )}\n            </Element.LanguageSelectionForDictionary>\n            <Element.SubmitButtonForAddingDictionary onClick={submitDictionary}>\n              Submit\n            </Element.SubmitButtonForAddingDictionary>\n          </>\n        )}\n      </Container>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  is_superuser: state.profile.is_admin,\n  dictionaries: state.learningSpecsReducer.dictionaries,\n  uniqueLang: state.learningSpecsReducer.uniqueLang,\n  selected_dictionary: state.learningSpecsReducer.selectedDictionary,\n  selected_mode: state.learningSpecsReducer.selectedMode,\n  selected_language: state.learningSpecsReducer.language,\n});\n\nexport default connect(mapStateToProps, {\n  get_dictionaries,\n  select_dictionary,\n  select_language,\n  create_dictionary,\n})(ModifyDictionaries);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}