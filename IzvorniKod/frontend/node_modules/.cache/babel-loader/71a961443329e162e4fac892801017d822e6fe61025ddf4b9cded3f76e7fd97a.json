{"ast":null,"code":"import Cookies from 'js-cookie';\nimport axios from 'axios';\nimport { load_user } from './profile';\nimport baseURL from './debug';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL, AUTHENTICATED_SUCCESS, AUTHENTICATED_FAIL, DELETE_USER_SUCCESS, DELETE_USER_FAIL } from './types';\nexport const checkAuthenticated = () => async dispatch => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.get(`${baseURL}/authenticated`, config);\n    if (res.data.error || res.data.isAuthenticated === 'error') {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n        isAuthenticatedPayload: false\n      });\n    } else if (res.data.isAuthenticated === 'success') {\n      dispatch({\n        type: AUTHENTICATED_SUCCESS,\n        isAuthenticatedPayload: true\n      });\n    } else {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n        isAuthenticatedPayload: false\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n      isAuthenticatedPayload: false\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  dispatch({\n    type: LOGIN_FAIL,\n    isAuthenticatedPayload: false,\n    invalidEmailOrPasswordPayload: false\n  });\n  const config = {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post(`${baseURL}/login`, body, config);\n    if (res.data.success) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        isAuthenticatedPayload: true,\n        invalidEmailOrPasswordPayload: false\n      });\n      dispatch(load_user());\n    } else {\n      dispatch({\n        type: LOGIN_FAIL,\n        isAuthenticatedPayload: false,\n        invalidEmailOrPasswordPayload: true\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      isAuthenticatedPayload: false,\n      invalidEmailOrPasswordPayload: true\n    });\n  }\n};\nexport const register = email => async dispatch => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    }\n  };\n  const body = JSON.stringify({\n    email\n  });\n  try {\n    const res = await axios.post(`${baseURL}/signup`, body, config);\n    if (res.data.error) {\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    } else {\n      dispatch({\n        type: REGISTER_SUCCESS\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    }\n  };\n  const body = JSON.stringify({});\n  try {\n    const res = await axios.post(`${baseURL}/logout`, body, config);\n    if (res.data.success) {\n      dispatch({\n        type: LOGOUT_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: LOGOUT_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: LOGOUT_FAIL\n    });\n  }\n};\nexport const delete_account = () => async dispatch => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    }\n  };\n  const body = JSON.stringify({});\n  try {\n    const res = await axios.delete(`${baseURL}/delete_user`, config, body);\n    if (res.data.success) {\n      dispatch({\n        type: DELETE_USER_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: DELETE_USER_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: DELETE_USER_FAIL\n    });\n  }\n};","map":{"version":3,"names":["Cookies","axios","load_user","baseURL","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","DELETE_USER_SUCCESS","DELETE_USER_FAIL","checkAuthenticated","dispatch","config","withCredentials","headers","res","get","data","error","isAuthenticated","type","isAuthenticatedPayload","err","login","email","password","invalidEmailOrPasswordPayload","body","JSON","stringify","post","success","register","logout","delete_account","delete"],"sources":["/Users/lovro/Faks/ProgI/CanonPrinter/IzvorniKod/frontend/src/actions/auth.js"],"sourcesContent":["import Cookies from 'js-cookie';\nimport axios from 'axios'\nimport { load_user } from './profile';\nimport baseURL from './debug';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_FAIL\n} from './types';\n\nexport const checkAuthenticated = () => async dispatch => {\n    const config = {\n        withCredentials: true,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n    };\n\n    try {\n        const res = await axios.get(`${baseURL}/authenticated`, config);\n\n        if (res.data.error || res.data.isAuthenticated === 'error') {\n            dispatch({\n                type: AUTHENTICATED_FAIL,\n                isAuthenticatedPayload: false\n            });\n        }\n        else if (res.data.isAuthenticated === 'success') {\n            dispatch({\n                type: AUTHENTICATED_SUCCESS,\n                isAuthenticatedPayload: true\n            });\n        }\n        else {\n            dispatch({\n                type: AUTHENTICATED_FAIL,\n                isAuthenticatedPayload: false\n            });\n        }\n    } catch(err) {\n        dispatch({\n            type: AUTHENTICATED_FAIL,\n            isAuthenticatedPayload: false\n        });\n    }\n};\n\nexport const login = (email, password) => async dispatch => {\n    dispatch({\n        type: LOGIN_FAIL,\n        isAuthenticatedPayload: false,\n        invalidEmailOrPasswordPayload: false\n    })\n    \n    const config = {\n        withCredentials: true,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post(`${baseURL}/login`, body, config);\n\n        if (res.data.success) {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                isAuthenticatedPayload: true,\n                invalidEmailOrPasswordPayload: false\n            });\n\n            dispatch(load_user());\n        } else {\n            dispatch({\n                type: LOGIN_FAIL,\n                isAuthenticatedPayload: false,\n                invalidEmailOrPasswordPayload: true\n            });\n        }\n    } catch(err) {\n        dispatch({\n            type: LOGIN_FAIL,\n            isAuthenticatedPayload: false,\n            invalidEmailOrPasswordPayload: true\n        });\n    }\n};\n\nexport const register = (email) => async dispatch => {\n    const config = {\n        withCredentials: true,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({ email });\n\n    try {\n        const res = await axios.post(`${baseURL}/signup`, body, config);\n\n        if (res.data.error) {\n            dispatch({\n                type: REGISTER_FAIL\n            });\n        } else {\n            dispatch({\n                type: REGISTER_SUCCESS\n            });\n        }\n    } catch (err) {\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n};\n\nexport const logout = () => async dispatch => {\n    const config = {\n        withCredentials: true,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({\n\n    });\n\n    try {\n        const res = await axios.post(`${baseURL}/logout`, body, config);\n\n        if (res.data.success) {\n            dispatch({\n                type: LOGOUT_SUCCESS\n            });\n        } else {\n            dispatch({\n                type: LOGOUT_FAIL\n            });\n        }\n    } catch(err) {\n        dispatch({\n            type: LOGOUT_FAIL\n        });\n    }\n};\n\nexport const delete_account = () => async dispatch => {\n    const config = {\n        withCredentials: true,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({\n\n    });\n\n    try {\n        const res = await axios.delete(`${baseURL}/delete_user`, config, body);\n\n        if (res.data.success) {\n            dispatch({\n                type: DELETE_USER_SUCCESS\n            });\n        } else {\n            dispatch({\n                type: DELETE_USER_FAIL\n            });\n        }\n    } catch (err) {\n        dispatch({\n            type: DELETE_USER_FAIL\n        });\n    }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}