{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport baseURL from \"./debug\";\nimport { ADD_ADMIN_FAILURE, ADD_ADMIN_SUCCESS, GET_ADMIN_DATA_FAILURE, GET_ADMIN_DATA_SUCCESS, DELETE_USER_ADMIN_FAIL, DELETE_USER_ADMIN_SUCCESS, GET_STUDENT_DATA_FAILURE, GET_STUDENT_DATA_SUCCESS, REMOVE_ADMIN_SUCCESS, REMOVE_ADMIN_FAILURE } from \"./types\";\nexport const delete_account = email => async dispatch => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n    }\n  };\n  const body = JSON.stringify({\n    email\n  });\n  try {\n    const res = await axios.put(`${baseURL}/delete_user_admin`, body, config);\n    if (res.data.success) {\n      dispatch({\n        type: DELETE_USER_ADMIN_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: DELETE_USER_ADMIN_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: DELETE_USER_ADMIN_FAIL\n    });\n  }\n};\nexport const get_students = () => async dispatch => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    const res = await axios.get(`${baseURL}/get_students`, config);\n    if (res.data.error) {\n      dispatch({\n        type: GET_STUDENT_DATA_FAILURE\n      });\n    } else {\n      dispatch({\n        type: GET_STUDENT_DATA_SUCCESS,\n        payload: res.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: GET_STUDENT_DATA_FAILURE\n    });\n  }\n};\nexport const get_admins = () => async dispatch => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    const res = await axios.get(`${baseURL}/get_admins`, config);\n    if (res.data.error) {\n      dispatch({\n        type: GET_ADMIN_DATA_FAILURE\n      });\n    } else {\n      dispatch({\n        type: GET_ADMIN_DATA_SUCCESS,\n        payload: res.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: GET_ADMIN_DATA_FAILURE\n    });\n  }\n};\nexport const remove_admin = email => async dispatch => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n    }\n  };\n  const body = JSON.stringify({\n    email\n  });\n  try {\n    const res = await axios.put(`${baseURL}/remove_admin`, body, config);\n    if (res.data.success) {\n      dispatch({\n        type: REMOVE_ADMIN_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: REMOVE_ADMIN_FAILURE\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: REMOVE_ADMIN_FAILURE\n    });\n  }\n};\nexport const add_admin = email => async dispatch => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n    }\n  };\n  const body = JSON.stringify({\n    email\n  });\n  try {\n    const res = await axios.put(`${baseURL}/add_admin`, body, config);\n    if (res.data.success) {\n      dispatch({\n        type: ADD_ADMIN_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: ADD_ADMIN_FAILURE\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: ADD_ADMIN_FAILURE\n    });\n  }\n};","map":{"version":3,"names":["Cookies","axios","baseURL","ADD_ADMIN_FAILURE","ADD_ADMIN_SUCCESS","GET_ADMIN_DATA_FAILURE","GET_ADMIN_DATA_SUCCESS","DELETE_USER_ADMIN_FAIL","DELETE_USER_ADMIN_SUCCESS","GET_STUDENT_DATA_FAILURE","GET_STUDENT_DATA_SUCCESS","REMOVE_ADMIN_SUCCESS","REMOVE_ADMIN_FAILURE","delete_account","email","dispatch","config","withCredentials","headers","Accept","get","body","JSON","stringify","res","put","data","success","type","payload","err","get_students","error","get_admins","remove_admin","add_admin"],"sources":["/Users/lovro/Faks/ProgI/CanonPrinter/IzvorniKod/frontend/src/actions/admin.js"],"sourcesContent":["import Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport baseURL from \"./debug\";\nimport {\n  ADD_ADMIN_FAILURE,\n  ADD_ADMIN_SUCCESS,\n  GET_ADMIN_DATA_FAILURE,\n  GET_ADMIN_DATA_SUCCESS,\n  DELETE_USER_ADMIN_FAIL,\n  DELETE_USER_ADMIN_SUCCESS,\n  GET_STUDENT_DATA_FAILURE,\n  GET_STUDENT_DATA_SUCCESS,\n  REMOVE_ADMIN_SUCCESS,\n  REMOVE_ADMIN_FAILURE,\n} from \"./types\";\n\nexport const delete_account = (email) => async (dispatch) => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n    },\n  };\n\n  const body = JSON.stringify({\n    email,\n  });\n\n  try {\n    const res = await axios.put(`${baseURL}/delete_user_admin`, body, config);\n\n    if (res.data.success) {\n      dispatch({\n        type: DELETE_USER_ADMIN_SUCCESS,\n        payload: res.data,\n      });\n    } else {\n      dispatch({\n        type: DELETE_USER_ADMIN_FAIL,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: DELETE_USER_ADMIN_FAIL,\n    });\n  }\n};\n\nexport const get_students = () => async (dispatch) => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.get(`${baseURL}/get_students`, config);\n\n    if (res.data.error) {\n      dispatch({\n        type: GET_STUDENT_DATA_FAILURE,\n      });\n    } else {\n      dispatch({\n        type: GET_STUDENT_DATA_SUCCESS,\n        payload: res.data,\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: GET_STUDENT_DATA_FAILURE,\n    });\n  }\n};\n\nexport const get_admins = () => async (dispatch) => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.get(`${baseURL}/get_admins`, config);\n\n    if (res.data.error) {\n      dispatch({\n        type: GET_ADMIN_DATA_FAILURE,\n      });\n    } else {\n      dispatch({\n        type: GET_ADMIN_DATA_SUCCESS,\n        payload: res.data,\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: GET_ADMIN_DATA_FAILURE,\n    });\n  }\n};\n\nexport const remove_admin = (email) => async (dispatch) => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n    },\n  };\n\n  const body = JSON.stringify({\n    email,\n  });\n\n  try {\n    const res = await axios.put(`${baseURL}/remove_admin`, body, config);\n\n    if (res.data.success) {\n      dispatch({\n        type: REMOVE_ADMIN_SUCCESS,\n        payload: res.data,\n      });\n    } else {\n      dispatch({\n        type: REMOVE_ADMIN_FAILURE,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: REMOVE_ADMIN_FAILURE,\n    });\n  }\n};\n\nexport const add_admin = (email) => async (dispatch) => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n    },\n  };\n\n  const body = JSON.stringify({\n    email,\n  });\n\n  try {\n    const res = await axios.put(`${baseURL}/add_admin`, body, config);\n\n    if (res.data.success) {\n      dispatch({\n        type: ADD_ADMIN_SUCCESS,\n        payload: res.data,\n      });\n    } else {\n      dispatch({\n        type: ADD_ADMIN_FAILURE,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: ADD_ADMIN_FAILURE,\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}